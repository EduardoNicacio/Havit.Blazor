@page "/HxInputTagsTest"
@using System.ComponentModel.DataAnnotations

<h1>HxInputTags</h1>

<HxSwitch Text="Enabled" @bind-Value="@enabled" />

<HxFormState Enabled="@enabled">
	<EditForm Model="model">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<HxInputTags @ref="inputTagsComponent" Label="Tags" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" />
		<HxInputTags Label="Tags (shared Value, Large)" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" InputSize="InputSize.Large" />
		<HxInputTags Label="Tags (shared Value, Small)" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" InputSize="InputSize.Small" />
		<HxInputTags ShowAddButton="true" AddButtonText="Add tag" Naked Label="Tags Naked" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" />
		<HxInputTags ShowAddButton="true" AddButtonText="Add tag" Naked Label="Tags (shared Value, Large, Naked)" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" InputSize="InputSize.Large" />
		<HxInputTags ShowAddButton="true" AddButtonText="Add tag" Naked Label="Tags (shared Value, Small, Naked)" @bind-Value="model.Tags" DataProvider="GetNewItemSuggestions" InputSize="InputSize.Small" />
		<HxButton CssClass="mt-2" Color="ThemeColor.Primary" OnClick="HandleValidClick">Save</HxButton>
	</EditForm>
</HxFormState>


<p>Tags: @tags</p>

<HxButton Text="Focus" Color="ThemeColor.Secondary" OnClick="async () => await inputTagsComponent.FocusAsync()" />

@code {
    private bool enabled = true;
    private MyModel model = new MyModel();
    private string tags;
    private HxInputTags inputTagsComponent;

    private Task<InputTagsDataProviderResult> GetNewItemSuggestions(InputTagsDataProviderRequest request)
    {
        return Task.FromResult(new InputTagsDataProviderResult()
		{
			Data = Enum.GetValues<ThemeColor>().Select(v => v.ToString())
		});
    }

    public class MyModel : IValidatableObject
    {
        public List<string> Tags { get; set; } = new List<string>() { "Blazor", "C#", "ASP.NET" };

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
			if (Tags.Count < 4)
			{
				yield return new ValidationResult("At least 4 tags have to be entered.", new[] { nameof(Tags) });
			}
        }
	}

	public void HandleValidClick()
	{
		tags = String.Join(',', model.Tags);
		StateHasChanged();
	}
}
